{
  "____comment": "This file was generated by eosio-abigen. DO NOT EDIT - 2018-09-10T04:36:43",
  "version": "eosio::abi/1.0",
  "types": [],
  "structs": [{
      "name": "stbid",
      "base": "",
      "fields": [{
          "name": "id",
          "type": "uint64"
        },{
          "name": "name",
          "type": "name"
        },{
          "name": "price",
          "type": "uint64"
        },{
          "name": "quantity",
          "type": "asset"
        },{
          "name": "ordertime",
          "type": "uint64"
        }
      ]
    },{
      "name": "stask",
      "base": "",
      "fields": [{
          "name": "id",
          "type": "uint64"
        },{
          "name": "name",
          "type": "name"
        },{
          "name": "price",
          "type": "uint64"
        },{
          "name": "quantity",
          "type": "asset"
        },{
          "name": "ordertime",
          "type": "uint64"
        }
      ]
    },{
      "name": "transfer",
      "base": "",
      "fields": [{
          "name": "sender",
          "type": "uint64"
        },{
          "name": "receiver",
          "type": "uint64"
        }
      ]
    },{
      "name": "triggerorder",
      "base": "",
      "fields": [{
          "name": "check",
          "type": "bool"
        },{
          "name": "sender",
          "type": "name"
        },{
          "name": "from",
          "type": "name"
        },{
          "name": "to",
          "type": "name"
        },{
          "name": "quantity",
          "type": "asset"
        },{
          "name": "price",
          "type": "uint64"
        }
      ]
    },{
      "name": "cancelorder",
      "base": "",
      "fields": [{
          "name": "name",
          "type": "name"
        },{
          "name": "orderId",
          "type": "uint64"
        },{
          "name": "orderType",
          "type": "uint8"
        }
      ]
    }
  ],
  "actions": [{
      "name": "transfer",
      "type": "transfer",
      "ricardian_contract": "# CONTRACT FOR transfer## ACTION NAME: transfer\n### Parameters### Parameters\nInput parameters:Input parameters:\n\n* 'sender' (sender)* 'sender' (sender)\n* 'receiver' (receiver)* 'receiver' (receiver)\n\n### Intent### Intent\nINTENT. The intent of the '{{ transfer }}' action is to validate orders(bid/ask) by first receives token(real action) and verify the price value(formatting).INTENT. The intent of the '{{ transfer }}' action is to validate orders(bid/ask) by first receives token(real action) and verify the price value(formatting).\n\n### Term### Term\nTERM. This Contract expires after code executionTERM. This Contract expires after code execution\n"
    },{
      "name": "triggerorder",
      "type": "triggerorder",
      "ricardian_contract": "# CONTRACT FOR triggerorder## ACTION NAME: triggerorder\n### Parameters### Parameters\nInput parameters:Input parameters:\n\n* 'check' (ram payer flag)* 'check' (ram payer flag)\n* 'sender' (action provider)* 'sender' (action provider)\n* 'from' (sender)* 'from' (sender)\n* 'to' (receiver)* 'to' (receiver)\n* 'quantity' (quantity of the order)* 'quantity' (quantity of the order)\n* 'price' (price of the order)* 'price' (price of the order)\n\n\n### Intent### Intent\nINTENT. The intent of the '{{ triggerorder }}' action is to trigger the order. Before this action is called, EOSDAQ verifies the orderer's KYC record from EOSDAQ's account tableINTENT. The intent of the '{{ triggerorder }}' action is to trigger the order. Before this action is called, EOSDAQ verifies the orderer's KYC record from EOSDAQ's account table\n\n### Term### Term\nTERM. This Contract expires after code executionTERM. This Contract expires after code execution\n"
    },{
      "name": "cancelorder",
      "type": "cancelorder",
      "ricardian_contract": "# CONTRACT FOR cancelorder## ACTION NAME: cancelorder\n### Parameters### Parameters\nInput parameters:Input parameters:\n\n* 'name' (account who wants to cancel the order)* 'name' (account who wants to cancel the order)\n* 'orderId' (Id of the order)* 'orderId' (Id of the order)\n* 'orderType' (bid/ask type)* 'orderType' (bid/ask type)\n\n### Intent### Intent\nINTENT. The intent of the '{{ cancelorder }}' action is to erase the order in orderbook to get refund tokens.INTENT. The intent of the '{{ cancelorder }}' action is to erase the order in orderbook to get refund tokens.\n\n### Term### Term\nTERM. This Contract expires after code executionTERM. This Contract expires after code execution\n"
    }
  ],
  "tables": [{
      "name": "stbid",
      "index_type": "i64",
      "key_names": [
        "id"
      ],
      "key_types": [
        "uint64"
      ],
      "type": "stbid"
    },{
      "name": "stask",
      "index_type": "i64",
      "key_names": [
        "id"
      ],
      "key_types": [
        "uint64"
      ],
      "type": "stask"
    }
  ],
  "ricardian_clauses": [{
      "id": "Severability",
      "body": "SEVERABILITY. If any provision of this Contract will be held to be invalid or unenforceable for any reason, the remaining provisions will continue to be valid and enforceable. If a court finds that any provision of this Contract is invalid or unenforceable, but that by limiting such provision it would become valid and enforceable, then such provision will be deemed to be written, construed, and enforced as so limited.\n\n"
    },{
      "id": "Amendment",
      "body": "AMENDMENT. This Contract may be modified or amended in writing by mutual agreement between the parties, if the writing is signed by the party obligated under the amendment.\n\n"
    },{
      "id": "Notice",
      "body": "NOTICE. Any notice or communication required or permitted under this Contract shall be sufficiently given if published as part of the source code.\n\n"
    },{
      "id": "Insurance",
      "body": "INSURANCE. The Company and Subsidiaries carry, or are covered by, insurance in such amounts and covering risks as the Company and the Subsidiaries reasonably believe are adequate for the conduct of their business and as is customary for companies of similar size engaged in similar business in similar industries\n\n"
    }
  ],
  "error_messages": [],
  "abi_extensions": []
}